# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main



pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET core sdk'
  inputs:
    version: 3.1.x
    performMultiLevelLookup: true

- task: UseDotNet@2
  inputs:
    version: '3.1.x'
  displayName: set dotnet version to use

- task: DotNetCoreCLI@2
  displayName: DotNetCoreCLI NuGet restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'config'
    nugetConfigPath: 'NuGet.config'


- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*webtests.csproj'
    arguments: '--configuration $(buildConfiguration)'
    testRunTitle: 'TestRun_$(build.buildnumber)'
- task: DotNetCoreCLI@2
  displayName: binaries
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactsStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: publish
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dotnetcore-webap'

